 /*
  * Copyright (c) 2020 The ZMK Contributors
  *
  * SPDX-License-Identifier: MIT
   */

   #include <behaviors.dtsi>
   #include <dt-bindings/zmk/keys.h>
   #include <dt-bindings/zmk/bt.h>
   #include <dt-bindings/zmk/rgb.h>
   #include <locale/keys_sv.h>

  / {
  chosen {
  zmk,physical-layout = &default_layout;
 };
 };
  
  
  
  
  
  
  
  
  / {
  
  
  behaviors {
 hml: home_row_mod_left {
  compatible = "zmk,behavior-hold-tap";
   #binding-cells = <2>;
  flavor = "balanced";
  require-prior-idle-ms = <150>;
  tapping-term-ms = <280>;
  quick-tap-ms = <175>;
  bindings = <&kp>, <&kp>;
  hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
  hold-trigger-on-release;
 };
 hmr: home_row_mod_right {
  compatible = "zmk,behavior-hold-tap";
   #binding-cells = <2>;
  flavor = "balanced";
  require-prior-idle-ms = <150>;
  tapping-term-ms = <280>;
  quick-tap-ms = <175>;
  bindings = <&kp>, <&kp>;
  hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 25 16 17 24 25 26 27 28 29>;
  hold-trigger-on-release;
 };
 };
   
   
   
   
   combos {
   compatible = "zmk,combos";
   
   /* ---- Single-side (same hand) ---- */
   /* Row 1 */
   combo_qw_grave {
   timeout-ms = <50>; layers = <0>;
   key-positions = <1 2>;          /* q + w */
   bindings = <&kp SV_GRAVE>;      /* ` */
   };
   combo_we_tilde {
   timeout-ms = <50>; layers = <0>;
   key-positions = <2 3>;          /* w + e */
   bindings = <&kp SV_TILDE>;      /* ~ */
   };
   combo_er_less {
   timeout-ms = <50>; layers = <0>;
   key-positions = <3 4>;          /* e + r */
   bindings = <&kp SV_LESS_THAN>;  /* < */
   };
   combo_ui_greater {
   timeout-ms = <50>; layers = <0>;
   key-positions = <7 8>;          /* u + i */
   bindings = <&kp SV_GREATER_THAN>; /* > */
   };
   combo_io_squote {
   timeout-ms = <50>; layers = <0>;
   key-positions = <8 9>;          /* i + o */
   bindings = <&kp SV_SINGLE_QUOTE>; /* ' */
   };
   combo_op_dquote {
   timeout-ms = <50>; layers = <0>;
   key-positions = <9 10>;         /* o + p */
   bindings = <&kp SV_DOUBLE_QUOTES>; /* " */
   };
   
   /* Row 2 */
   combo_as_lbracket {
   timeout-ms = <50>; layers = <0>;
   key-positions = <13 14>;        /* a + s */
   bindings = <&kp SV_LEFT_BRACKET>;  /* [ */
   };
   combo_sd_lbrace {
   timeout-ms = <50>; layers = <0>;
   key-positions = <14 15>;        /* s + d */
   bindings = <&kp SV_LEFT_BRACE>;    /* { */
   };
   combo_df_lparen {
   timeout-ms = <50>; layers = <0>;
   key-positions = <15 16>;        /* d + f */
   bindings = <&kp SV_LEFT_PARENTHESIS>; /* ( */
   };
   combo_jk_rparen {
   timeout-ms = <50>; layers = <0>;
   key-positions = <19 20>;        /* j + k */
   bindings = <&kp SV_RIGHT_PARENTHESIS>; /* ) */
   };
   combo_kl_rbrace {
   timeout-ms = <50>; layers = <0>;
   key-positions = <20 21>;        /* k + l */
   bindings = <&kp SV_RIGHT_BRACE>;   /* } */
   };
   combo_loe_rbracket {
   timeout-ms = <50>; layers = <0>;
   key-positions = <21 22>;        /* l + รถ */
   bindings = <&kp SV_RIGHT_BRACKET>;  /* ] */
   };
   
   /* Row 3 / bottom */
   combo_zx_dollar {
   timeout-ms = <50>; layers = <0>;
   key-positions = <25 26>;        /* z + x */
   bindings = <&kp SV_DOLLAR>;     /* $ */
   };
   combo_xc_hash {
   timeout-ms = <50>; layers = <0>;
   key-positions = <26 27>;        /* x + c */
   bindings = <&kp SV_HASH>;       /* # */
   };
   combo_cv_slash {
   timeout-ms = <50>; layers = <0>;
   key-positions = <27 28>;        /* c + v */
   bindings = <&kp SV_SLASH>;      /* / */
   };
   combo_comma_dot_backslash {
   timeout-ms = <50>; layers = <0>;
   key-positions = <31 32>;        /* , + . */
   bindings = <&kp SV_BACKSLASH>;  /* \ */
   };
   combo_m_comma_at {
   timeout-ms = <50>; layers = <0>;
 key-positions = <32 33>;        /* . note: as per your table m,<32,33> */
   bindings = <&kp SV_AT_SIGN>;    /* @ */
 };
   combo_dot_minus_pipe {
   timeout-ms = <50>; layers = <0>;
   key-positions = <33 34>;        /* . + - */
   bindings = <&kp SV_PIPE>;       /* | */
 };
   
   /* ---- Dual-side (mirrored) ---- (unchanged) */
   combo_qp_equal {
   timeout-ms = <50>; layers = <0>;
   key-positions = <1 10>;         /* q + p */
   bindings = <&kp SV_EQUAL>;      /* = */
 };
   combo_wo_percent {
   timeout-ms = <50>; layers = <0>;
   key-positions = <2 9>;          /* w + o */
   bindings = <&kp SV_PERCENT>;    /* % */
 };
   combo_ei_caret {
   timeout-ms = <50>; layers = <0>;
   key-positions = <3 8>;          /* e + i */
   bindings = <&kp SV_CARET>;      /* ^ */
 };
   combo_ru_plus {
   timeout-ms = <50>; layers = <0>;
   key-positions = <4 7>;          /* r + u */
   bindings = <&kp SV_PLUS>;       /* + */
 };
   combo_ao_exclam {
   timeout-ms = <50>; layers = <0>;
   key-positions = <13 22>;        /* a + รถ */
   bindings = <&kp SV_EXCLAMATION>; /* ! */
 };
   combo_sl_qmark {
   timeout-ms = <50>; layers = <0>;
   key-positions = <14 21>;        /* s + l */
   bindings = <&kp SV_QUESTION>;   /* ? */
 };
   combo_dk_ampersand {
   timeout-ms = <50>; layers = <0>;
   key-positions = <15 20>;        /* d + k */
   bindings = <&kp SV_AMPERSAND>;  /* & */
 };
   combo_fj_asterisk {
   timeout-ms = <50>; layers = <0>;
   key-positions = <16 19>;        /* f + j */
   bindings = <&kp SV_ASTERISK>;   /* * */
 };
 };
   
   
  
  
  
  
  
  
  keymap {
  compatible = "zmk,keymap";
  
  
  
  
  default_layer {
  display-name = "QWERTY";
  
  bindings = <
  &kp TAB  &kp Q       &kp W       &kp E        &kp R        &kp T  &kp Y   &kp U        &kp I        &kp O       &kp P                 &kp SV_A_RING
  &kp ESC  &hml LGUI A &hml LALT S &hml LCTRL D &hml LSHFT F &kp G  &kp H   &hmr RSHFT J &hmr RCTRL K &hmr RALT L &hmr RGUI SV_O_UMLAUT &kp SV_A_UMLAUT
  &kp CAPS &kp Z       &kp X       &kp C        &kp V        &kp B                &kp N   &kp M        &kp COMMA    &kp DOT     &kp FSLH              &kp BSPC
  &mo 3       &mo 1         &kp SPACE            &kp RET &mo 2        &trans
  >;
 };
  
  lower_layer {
  
  display-name = "NUM";
  bindings = <
  &trans &kp N1        &kp N2        &kp N3       &kp N4       &kp N5         &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp BSPC
  &trans &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp HOME    &kp END
  &trans &bt BT_CLR    &rgb_ug RGB_TOG &sys_reset &bootloader  &studio_unlock                 &kp PG_UP   &kp PG_DN   &trans      &trans      &trans      &trans
  &kp LGUI     &trans        &kp SPACE                         &kp RET     &trans      &kp RALT
  >;
 };
  
  raise_layer {
  display-name = "SYM";
  
  
  bindings = <
  &trans &kp SV_EXCL   &kp SV_AT     &kp SV_HASH   &kp SV_DLLR   &kp SV_PRCNT   &kp SV_CARET  &kp SV_AMPS   &kp SV_LPAR  &kp SV_RPAR  &kp SV_ASTRK  &trans
  &trans &kp SV_SQT    &kp SV_DQT    &kp SV_TILDE  &kp SV_GRAVE  &kp SV_EQUAL   &kp SV_MINUS  &kp SV_PLUS   &kp SV_LBKT  &kp SV_RBKT  &kp SV_BSLH   &kp SV_PIPE
  &trans &kp SV_LT     &kp SV_GT     &trans        &trans        &kp SV_UNDER                &trans        &kp SV_QMARK  &kp SV_LBRC  &kp SV_RBRC  &kp SV_FSLH   &trans
  &kp LGUI  &trans        &kp SPACE                          &kp RET       &trans       &kp RALT
  >;
 };
  
  extra_layer_1 {
  display-name = "NAV";
  
  
  bindings = <
  &trans    &trans   &kp PG_UP   &kp HOME  &trans    &trans      &trans   &kp END   &trans   &trans   &trans   &trans
  &trans    &kp LSHFT &kp LALT &kp LC(A)   &kp LC(E) &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &kp RET  &trans
  &trans    &trans   &trans      &kp ESC   &kp BSPC  &kp DEL                       &kp TAB  &kp SPACE &trans     &trans   &trans   &trans
  &trans    &trans   &kp SPACE                       &kp RET  &trans   &trans
  >;
 };


 };
 };
